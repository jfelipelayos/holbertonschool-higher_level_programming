===================================
| Test Cases for 0-add_integer.py |
===================================

>>> add_integer = __import__('0-add_integer').add_integer

The ```0-add_integer``` module

```Importing module add_integer```
>>> add_integer = __import__('0-add_integer').add_integer

Number
# checks in integer

>>> add_integer(3, 5)
8

>>> add_integer(4, -2)
2

>>> add_integer(1)
99

>>> add_integer(100.3, -5)
95

>>> add_integer(1, "Hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(2, {100, 'test'})
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('NaN'), 0)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
