===================================
| Test Cases for 0-add_integer.py |
===================================

>>> add_integer = __import__('0-add_integer').add_integer

#Add two integers
>>> add_integer(6, 4) 
10

#Add two floats
>>> add_integer(2.2, 3.1) 
5

#Add one int and one float
>>> add_integer(1, 7.8)
8

#Add one float and one int
>>> add_integer(2.5, 5)
7

#Add one int and one string
>>> add_integer(1,'hola')
Traceback (most recent call last):
    ...
TypeError: b must be an integer

#Add one string and one string
>>> add_integer('hello',1)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

#Add two strings
>>> add_integer('Holberton','School')
Traceback (most recent call last):
    ...
TypeError: a must be an integer

#Add one boolean and one integer
>>> add_integer(True,3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

#Add one boolean and one float
>>> add_integer(True,3.4)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

#Add one boolean and one string
>>> add_integer(True,'hello')
Traceback (most recent call last):
    ...
TypeError: a must be an integer

#Add one integer and one boolean
>>> add_integer(2,False)
Traceback (most recent call last):
    ...
TypeError: b must be an integer

#Add None value and None value
>>> add_integer(None,None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('NaN'), 0)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer